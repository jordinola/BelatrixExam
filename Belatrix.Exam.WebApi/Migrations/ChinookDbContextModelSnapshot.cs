// <auto-generated />
using System;
using Belatrix.Exam.WebApi.Repository.MySql;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Belatrix.Exam.WebApi.Migrations
{
    [DbContext(typeof(ChinookDbContext))]
    partial class ChinookDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "3.0.0-preview5.19227.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Belatrix.Exam.WebApi.Models.Album", b =>
                {
                    b.Property<int>("AlbumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("album_id");

                    b.Property<int>("ArtistId")
                        .HasColumnName("artist_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasColumnType("varchar")
                        .HasMaxLength(160);

                    b.HasKey("AlbumId")
                        .HasName("album_id_pkey");

                    b.HasIndex("ArtistId")
                        .HasName("artist_id_idx");

                    b.ToTable("album");
                });

            modelBuilder.Entity("Belatrix.Exam.WebApi.Models.Artist", b =>
                {
                    b.Property<int>("ArtistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("artist_id");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("varchar")
                        .HasMaxLength(120);

                    b.HasKey("ArtistId")
                        .HasName("artist_id_pkey");

                    b.ToTable("artist");
                });

            modelBuilder.Entity("Belatrix.Exam.WebApi.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("customer_id");

                    b.Property<string>("Address")
                        .HasColumnName("address")
                        .HasColumnType("varchar")
                        .HasMaxLength(70);

                    b.Property<string>("City")
                        .HasColumnName("city")
                        .HasColumnType("varchar")
                        .HasMaxLength(40);

                    b.Property<string>("Company")
                        .HasColumnName("company")
                        .HasColumnType("varchar")
                        .HasMaxLength(80);

                    b.Property<string>("Country")
                        .HasColumnName("country")
                        .HasColumnType("varchar")
                        .HasMaxLength(40);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasColumnType("varchar")
                        .HasMaxLength(60);

                    b.Property<string>("Fax")
                        .HasColumnName("fax")
                        .HasColumnType("varchar")
                        .HasMaxLength(24);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("first_name")
                        .HasColumnType("varchar")
                        .HasMaxLength(40);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("last_name")
                        .HasColumnType("varchar")
                        .HasMaxLength(20);

                    b.Property<string>("Phone")
                        .HasColumnName("phone")
                        .HasColumnType("varchar")
                        .HasMaxLength(24);

                    b.Property<string>("PostalCode")
                        .HasColumnName("postal_code")
                        .HasColumnType("varchar")
                        .HasMaxLength(10);

                    b.Property<string>("State")
                        .HasColumnName("state")
                        .HasColumnType("varchar")
                        .HasMaxLength(40);

                    b.Property<int>("SupportRepId")
                        .HasColumnName("support_rep_id");

                    b.HasKey("CustomerId")
                        .HasName("customer_id_pkey");

                    b.HasIndex("SupportRepId")
                        .HasName("support_rep_id_idx");

                    b.ToTable("customer");
                });

            modelBuilder.Entity("Belatrix.Exam.WebApi.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("employee_id");

                    b.Property<string>("Address")
                        .HasColumnName("address")
                        .HasColumnType("varchar")
                        .HasMaxLength(70);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnName("birth_date");

                    b.Property<string>("City")
                        .HasColumnName("city")
                        .HasColumnType("varchar")
                        .HasMaxLength(40);

                    b.Property<string>("Country")
                        .HasColumnName("country")
                        .HasColumnType("varchar")
                        .HasMaxLength(40);

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("varchar")
                        .HasMaxLength(60);

                    b.Property<string>("Fax")
                        .HasColumnName("fax")
                        .HasColumnType("varchar")
                        .HasMaxLength(24);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("first_name")
                        .HasColumnType("varchar")
                        .HasMaxLength(20);

                    b.Property<DateTime>("HireDate")
                        .HasColumnName("hire_date");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("last_name")
                        .HasColumnType("varchar")
                        .HasMaxLength(20);

                    b.Property<string>("Phone")
                        .HasColumnName("phone")
                        .HasColumnType("varchar")
                        .HasMaxLength(24);

                    b.Property<string>("PostalCode")
                        .HasColumnName("postal_code")
                        .HasColumnType("varchar")
                        .HasMaxLength(10);

                    b.Property<int>("ReportsTo")
                        .HasColumnName("reports_to");

                    b.Property<string>("State")
                        .HasColumnName("state")
                        .HasColumnType("varchar")
                        .HasMaxLength(40);

                    b.Property<string>("Title")
                        .HasColumnName("title")
                        .HasColumnType("varchar")
                        .HasMaxLength(30);

                    b.HasKey("EmployeeId")
                        .HasName("employee_id_pkey");

                    b.HasIndex("ReportsTo")
                        .HasName("reports_to_idx");

                    b.ToTable("employee");
                });

            modelBuilder.Entity("Belatrix.Exam.WebApi.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("genre_id");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("varchar")
                        .HasMaxLength(120);

                    b.HasKey("GenreId")
                        .HasName("genre_id_pkey");

                    b.ToTable("genre");
                });

            modelBuilder.Entity("Belatrix.Exam.WebApi.Models.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("invoice_id");

                    b.Property<string>("BillingAddress")
                        .HasColumnName("billing_address")
                        .HasColumnType("varchar")
                        .HasMaxLength(70);

                    b.Property<string>("BillingCity")
                        .HasColumnName("billing_city")
                        .HasColumnType("varchar")
                        .HasMaxLength(40);

                    b.Property<string>("BillingCountry")
                        .HasColumnName("billing_country")
                        .HasColumnType("varchar")
                        .HasMaxLength(40);

                    b.Property<string>("BillingPostalCode")
                        .HasColumnName("billing_postal_code")
                        .HasColumnType("varchar")
                        .HasMaxLength(10);

                    b.Property<string>("BillingState")
                        .HasColumnName("billing_state")
                        .HasColumnType("varchar")
                        .HasMaxLength(40);

                    b.Property<int>("CustomerId")
                        .HasColumnName("customer_id");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnName("invoice_date");

                    b.Property<decimal>("Total")
                        .HasColumnName("total")
                        .HasColumnType("numeric(10,2)");

                    b.HasKey("InvoiceId")
                        .HasName("invoice_id_pkey");

                    b.HasIndex("CustomerId")
                        .HasName("customer_id_idx");

                    b.ToTable("invoice");
                });

            modelBuilder.Entity("Belatrix.Exam.WebApi.Models.InvoiceLine", b =>
                {
                    b.Property<int>("InvoiceLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("invoice_line_id");

                    b.Property<int>("InvoiceId")
                        .HasColumnName("invoice_id");

                    b.Property<int>("Quantity")
                        .HasColumnName("quantity");

                    b.Property<int>("TrackId")
                        .HasColumnName("track_id");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnName("unit_price")
                        .HasColumnType("numeric(10,2)");

                    b.HasKey("InvoiceLineId")
                        .HasName("invoice_line_id_pkey");

                    b.HasIndex("InvoiceId")
                        .HasName("invoice_id_idx");

                    b.HasIndex("TrackId")
                        .HasName("track_id_idx");

                    b.ToTable("invoice_line");
                });

            modelBuilder.Entity("Belatrix.Exam.WebApi.Models.MediaType", b =>
                {
                    b.Property<int>("MediaTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("media_type_id");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("varchar")
                        .HasMaxLength(120);

                    b.HasKey("MediaTypeId")
                        .HasName("media_type_id_pkey");

                    b.ToTable("media_type");
                });

            modelBuilder.Entity("Belatrix.Exam.WebApi.Models.Playlist", b =>
                {
                    b.Property<int>("PlaylistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("playlist_id");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("varchar")
                        .HasMaxLength(120);

                    b.HasKey("PlaylistId")
                        .HasName("playlist_id_pkey");

                    b.ToTable("playlist");
                });

            modelBuilder.Entity("Belatrix.Exam.WebApi.Models.PlaylistTrack", b =>
                {
                    b.Property<int>("PlaylistId")
                        .HasColumnName("playlist_id");

                    b.Property<int>("TrackId")
                        .HasColumnName("track_id");

                    b.HasKey("PlaylistId", "TrackId")
                        .HasName("playlist_id__track_id__pkey");

                    b.HasIndex("TrackId");

                    b.ToTable("playlist_track");
                });

            modelBuilder.Entity("Belatrix.Exam.WebApi.Models.Track", b =>
                {
                    b.Property<int>("TrackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("track_id");

                    b.Property<int>("AlbumId")
                        .HasColumnName("album_id");

                    b.Property<int>("Bytes")
                        .HasColumnName("bytes");

                    b.Property<string>("Composer")
                        .HasColumnName("composer")
                        .HasColumnType("varchar")
                        .HasMaxLength(220);

                    b.Property<int>("GenreId")
                        .HasColumnName("genre_id");

                    b.Property<int>("MediaTypeId")
                        .HasColumnName("media_type_id");

                    b.Property<int>("Milliseconds")
                        .HasColumnName("milliseconds");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar")
                        .HasMaxLength(200);

                    b.Property<decimal>("UnitPrice")
                        .HasColumnName("unit_price")
                        .HasColumnType("numeric(10,2)");

                    b.HasKey("TrackId")
                        .HasName("track_id_pkey");

                    b.HasIndex("AlbumId")
                        .HasName("album_id_idx");

                    b.HasIndex("GenreId")
                        .HasName("genre_id_idx");

                    b.HasIndex("MediaTypeId")
                        .HasName("media_type_id_idx");

                    b.ToTable("track");
                });

            modelBuilder.Entity("Belatrix.Exam.WebApi.Models.Album", b =>
                {
                    b.HasOne("Belatrix.Exam.WebApi.Models.Artist", "Artist")
                        .WithMany("Albums")
                        .HasForeignKey("AlbumId")
                        .HasConstraintName("artist_album_fk")
                        .IsRequired();
                });

            modelBuilder.Entity("Belatrix.Exam.WebApi.Models.Customer", b =>
                {
                    b.HasOne("Belatrix.Exam.WebApi.Models.Employee", "SupportEmployee")
                        .WithMany("Customers")
                        .HasForeignKey("SupportRepId")
                        .HasConstraintName("customers__support_employee__fk")
                        .IsRequired();
                });

            modelBuilder.Entity("Belatrix.Exam.WebApi.Models.Employee", b =>
                {
                    b.HasOne("Belatrix.Exam.WebApi.Models.Employee", "Leader")
                        .WithMany("Employees")
                        .HasForeignKey("ReportsTo")
                        .HasConstraintName("employees_leader_fk")
                        .IsRequired();
                });

            modelBuilder.Entity("Belatrix.Exam.WebApi.Models.Invoice", b =>
                {
                    b.HasOne("Belatrix.Exam.WebApi.Models.Customer", "Customer")
                        .WithMany("Invoices")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("customer_invoices_fk")
                        .IsRequired();
                });

            modelBuilder.Entity("Belatrix.Exam.WebApi.Models.InvoiceLine", b =>
                {
                    b.HasOne("Belatrix.Exam.WebApi.Models.Invoice", "Invoice")
                        .WithMany("InvoiceLines")
                        .HasForeignKey("InvoiceId")
                        .HasConstraintName("invoice__invoice_lines__fk")
                        .IsRequired();

                    b.HasOne("Belatrix.Exam.WebApi.Models.Track", "Track")
                        .WithMany("InvoiceLines")
                        .HasForeignKey("TrackId")
                        .HasConstraintName("invoice_lines__track__fk")
                        .IsRequired();
                });

            modelBuilder.Entity("Belatrix.Exam.WebApi.Models.PlaylistTrack", b =>
                {
                    b.HasOne("Belatrix.Exam.WebApi.Models.Playlist", "Playlist")
                        .WithMany("PlaylistTracks")
                        .HasForeignKey("PlaylistId")
                        .HasConstraintName("playlist__playlist_tracks__fk")
                        .IsRequired();

                    b.HasOne("Belatrix.Exam.WebApi.Models.Track", "Track")
                        .WithMany("PlaylistTracks")
                        .HasForeignKey("TrackId")
                        .HasConstraintName("playlist_tracks__track__fk")
                        .IsRequired();
                });

            modelBuilder.Entity("Belatrix.Exam.WebApi.Models.Track", b =>
                {
                    b.HasOne("Belatrix.Exam.WebApi.Models.Album", "Album")
                        .WithMany("Tracks")
                        .HasForeignKey("AlbumId")
                        .HasConstraintName("album_tracks_fk")
                        .IsRequired();

                    b.HasOne("Belatrix.Exam.WebApi.Models.Genre", "Genre")
                        .WithMany("Tracks")
                        .HasForeignKey("GenreId")
                        .HasConstraintName("genre_tracks_fk")
                        .IsRequired();

                    b.HasOne("Belatrix.Exam.WebApi.Models.MediaType", "MediaType")
                        .WithMany("Tracks")
                        .HasForeignKey("MediaTypeId")
                        .HasConstraintName("media_type__tracks__fk")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
